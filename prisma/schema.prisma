generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model TelegramUser {
  id            Int      @id @default(autoincrement())
  tgId          Int      @unique
  firstVisit    DateTime @default(now())
  lastVisit     DateTime @default(now())
  visitCount    Int      @default(1)
  birthdate     DateTime?
  pairCode      String?  @unique
  partnerId     Int?
  partner       TelegramUser?  @relation("UserPartner", fields: [partnerId], references: [id], onDelete: SetNull)
  pairedUsers   TelegramUser[] @relation("UserPartner")
  answers       Answer[]

  @@index([tgId])
}

model Practice {
  id        Int       @id @default(autoincrement())
  name      String
  questions Question[]
}

model Block {
  id         Int       @id @default(autoincrement())
  name       String
  order      Int?
  questions  Question[]

  @@index([order])
}

model Question {
  id         Int       @id @default(autoincrement())
  text       String
  order      Int?
  blockId    Int
  practiceId Int
  role       String    @default("none")
  
  block      Block     @relation(fields: [blockId], references: [id])
  practice   Practice  @relation(fields: [practiceId], references: [id])
  answers    Answer[]

  @@index([blockId])
  @@index([practiceId])
  @@index([order])
  @@index([blockId, order])
}

model Answer {
  id         Int       @id @default(autoincrement())
  questionId Int
  userId     Int
  text       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  
  question   Question     @relation(fields: [questionId], references: [id])
  user       TelegramUser @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([questionId])
  @@index([userId, questionId])
  @@index([createdAt])
} 